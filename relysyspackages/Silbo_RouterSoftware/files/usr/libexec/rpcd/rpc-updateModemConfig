#!/bin/sh

. /usr/share/libubox/jshn.sh
. /lib/functions.sh

modemconfigUCIPath=/etc/config/modemconfig
modemconfigsection="modemconfig"
UpdateConfigScript="/bin/UpdateModemConfig.sh"

#case "$1" in
    #list)
        #echo '{"configure":{"application":"ApplicationName","action":"ActionName"}}'
        #;;
    #call)
        #case "$2" in
                   #configure)
		                ## read the arguments
		                #read -r input;
		                #json_load "$input" > /dev/null 2>&1
		                #json_get_var ApplicationName application
		                #json_get_var ActionName action
	                    #case "$ApplicationName" in
	                        #"Update")
	                            #case "$ActionName" in
	                                #"updatemodemconfig")
	                                       #config_load "$modemconfigUCIPath"
											#config_get enablemodem2config "$modemconfigsection" enablemodem2config
											#config_get cellularmodem2 "$modemconfigsection" cellularmodem2
											#config_get Manufacturer1 "$modemconfigsection" Manufacturer1
											#config_get model1 "$modemconfigsection" model1
											#config_get Manufacturer2 "$modemconfigsection" Manufacturer2
										    #config_get model2 "$modemconfigsection" model2
											##if [ "$cellularmodem2" = "custom" ] 
											##then
												
										        ##uci set sysconfig.sysconfig.cellularmodem2="$Manufacturer2":"$model2"
										        
										    ##else
										         ##uci set sysconfig.sysconfig.cellularmodem2="$cellularmodem2"
										        
										    ##fi 
										    
										    #if [ "$cellularmodem1" = "custom" ] 
											#then
												
										        #uci set sysconfig.sysconfig.cellularmodem="$Manufacturer1":"$model1"
										       
										    #else
										         #uci set sysconfig.sysconfig.cellularmodem="$cellularmodem1"
										         
										    #fi 
										     #uci commit sysconfig
										     
										     #echo "{\"code\":\"0\",\"output\":\"Updated Configurations\"}"

										       
		                                     #;;
	                                  #*)
	                                    #echo '{"code":"1","output":"invalid action"}'
	                                    #exit 1
	                                    #;;
	                            #esac #application action
	                            #;;
	                    #esac #application name
	                    #;;
                    #*)
                    #echo '{"code":"1","output":"invalid method"}'
                    #exit 1
        #esac #appmanager method
            #;;
#esac # ubus method

case "$1" in
    list)
        echo '{"configure":{},"startopenvpn":{},"stopopenvpn":{},"testarchive":{"archive":"ArchiveName"}}'
        ;;
    call)
        case "$2" in
                    configure)
                            response=$($UpdateConfigScript)
                           # file="$(cat /bin/updatevpnconfigoutput.txt)" 
                         	echo "{\"code\":0,\"output\":\"$file\"}" 
                                                                                 
                            ;;                        
                                                            
		                          
		             *)
		                    echo '{"code":"1","output":"invalid method"}'
		                    exit 1
		                    ;;
     
        esac #appmanager method
        ;;
esac # ubus method

exit 0


exit 0
